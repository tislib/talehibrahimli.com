{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","pages/AboutPage.tsx","base/Project.tsx","resources/projects/accept360.tsx","resources/projects/alwan.tsx","resources/projects/crossover-bandcamp.tsx","resources/projects/cx-process.tsx","resources/projects/euniversity.tsx","resources/projects/kayako.tsx","resources/projects/payment-gateway.tsx","resources/projects/taxi-management-system.tsx","resources/projects/vodofone-india.tsx","resources/index.ts","services/resources-service.ts","pages/portfolio/PortfolioItem.tsx","pages/portfolio/Portfolio.tsx","pages/portfolio/PortfolioProjectPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","to","Footer","href","icon","faFacebookF","fixedWidth","size","faLinkedin","onClick","alert","faTelegram","faGithub","AboutPage","data-mh","Project","props","Accept360Project","name","title","content","link","description","AlwanProject","CrossoverBandcampProject","CxProcessProject","EuniversityProject","KayakoProject","PaymentGateway","React","Component","TaxiManagementSystemProject","VodafoneIndiaProject","projects","projects_","getResources","items","Object","getOwnPropertyNames","filter","item","startsWith","map","prototype","render","normalizeResource","PortfolioItem","id","resources","console","log","Portfolio","key","PortfolioProjectPage","projectName","this","match","params","project","App","path","component","mainScript","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d5485fdf.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const Header = () => {\n    return <header className=\"site-header\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-xs-12\">\n\n                    <Link className=\"site-header__logo\" to='/'>\n                        Taleh Ibrahimi\n                    </Link>\n\n                    <ul className=\"site-header__nav hidden-xs\">\n\n                        <li>\n                            <Link to='/'>\n                                About Me\n                            </Link>\n                        </li>\n\n                        <li>\n                            <Link to='/portfolio'>\n                                Portfolio\n                            </Link>\n                        </li>\n\n                        <li>\n                            <Link to='/blog'>\n                                Blog\n                            </Link>\n                        </li>\n\n                        <li>\n                            <Link to='/contact'>\n                                Contact\n                            </Link>\n                        </li>\n\n                    </ul>\n                    <button className=\"offcanvas-toggle visible-xs\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </button>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </header>;\n};\n","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFacebookF, faGithub, faLinkedin, faTelegram} from '@fortawesome/free-brands-svg-icons';\n\nexport const Footer = () => {\n    return <footer className=\"site-footer\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-6\">\n                    <p className=\"site-footer__copyright\">Copyright &copy; 2020. - Taleh Ibrahimli <br/>All rights reserved.</p>\n                </div>\n                <div className=\"col-sm-6 align-right\">\n                    <a href='https://www.facebook.com/taleh.ibrahimli' className='social-link'>\n                        <FontAwesomeIcon icon={faFacebookF} fixedWidth size='2x'/>\n                    </a>\n                    <a href='https://www.linkedin.com/in/taleh-ibrahimli-b7511b66' className='social-link'>\n                        <FontAwesomeIcon icon={faLinkedin} fixedWidth size='2x'/>\n                    </a>\n                    <a onClick={() => alert('@TalehIbrahimli')} className='social-link'>\n                        <FontAwesomeIcon icon={faTelegram} fixedWidth size='2x'/>\n                    </a>\n                    <a href='https://github.com/tislib' className='social-link'>\n                        <FontAwesomeIcon icon={faGithub} fixedWidth size='2x'/>\n                    </a>\n\n                </div>\n\n\n            </div>\n\n        </div>\n\n    </footer>;\n};\n","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFacebookF, faGithub, faLinkedin, faTelegram} from '@fortawesome/free-brands-svg-icons';\n\nimport './AboutPage.scss';\n\nexport const AboutPage = () => {\n    return (<>\n        <div className=\"hero-subheader\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-7\">\n                        <div className=\"align-container\" data-mh>\n                            <div className=\"align-inner\">\n                                <p className=\"hero-subheader__desc\">\n                                    I am Java Software Architect with 9 years hands'on experience.\n                                    <br/>\n                                    I love programming, Travelling, Making Coffee, Solving Complex Problems\n                                </p>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n\n                </div>\n\n            </div>\n\n        </div>\n\n        <div className=\"section\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"content center\">\n                        <a href='https://www.facebook.com/taleh.ibrahimli' className='social-link'>\n                            <FontAwesomeIcon icon={faFacebookF} fixedWidth size='4x'/>\n                        </a>\n                        <a href='https://www.linkedin.com/in/taleh-ibrahimli-b7511b66' className='social-link'>\n                            <FontAwesomeIcon icon={faLinkedin} fixedWidth size='4x'/>\n                        </a>\n                        <a onClick={() => alert('@TalehIbrahimli')} className='social-link'>\n                            <FontAwesomeIcon icon={faTelegram} fixedWidth size='4x'/>\n                        </a>\n                        <a href='https://github.com/tislib' className='social-link'>\n                            <FontAwesomeIcon icon={faGithub} fixedWidth size='4x'/>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n    </>);\n};\n","import React from 'react';\nimport {DynamicComponent} from './dynamic-component';\n\nexport interface ProjectParams extends DynamicComponent {\n    description: React.ComponentElement<any, any>;\n    name: string;\n    title: string;\n    content?: React.ComponentElement<any, any>;\n    link?: string;\n}\n\nexport function Project(props: ProjectParams) {\n    return <></>;\n}\n","import React from 'react';\nimport {Project} from '../../base/Project';\n\nexport const Accept360Project = () => {\n return <Project name='accept-350'\n                 title='Accept 360'\n                 content={\n                  <h1>asdsadsd</h1>\n                 }\n                 link='http://www.accept360.com'\n                 description={<span>\n                  Skills used: Java, Spring, Extjs, Oracle\n                 </span>}\n />;\n};\n","import React from 'react';\nimport {Project} from '../../base/Project';\n\nexport const AlwanProject = () => {\n return <Project name='alwan-cars'\n                 title='Alwan Cars'\n                 content={\n                  <h1>asdsadsd</h1>\n                 }\n                 description={<span>\n                 </span>}\n />;\n};\n","import React from 'react';\nimport {Project} from '../../base/Project';\n\nexport const CrossoverBandcampProject = () => {\n return <Project name='crossover-bandcamp'\n                 title='Crossover Bandcamp'\n                 content={\n                  <h1>Skills used: Java, Spring boot, Mysql, Activiti</h1>\n                 }\n                 description={<span>\n                  Skills used: Java, Spring boot, Mysql, Activiti\n                 </span>}\n />;\n};\n","import React from 'react';\nimport {Project} from '../../base/Project';\n\nexport const CxProcessProject = () => {\n return <Project name='cx-process'\n                 title='Cx Process'\n                 content={\n                  <h1>asdsadsd</h1>\n                 }\n                 description={<span>\n\n                 </span>}\n />;\n};\n","import React from 'react';\nimport {Project} from '../../base/Project';\n\nexport const EuniversityProject = () => {\n return <Project name='electron-university'\n                 title='Electron University'\n                 content={\n                  <h1>asdsadsd</h1>\n                 }\n                 description={<span>\n                  Electron University - (University Education Management system)\n                  Skills used: Java, Spring, Spring Security, GWT, GXT, EXTJS, IText, phantomjs, postgresql\n                  Period: March 2014 - Dec. 2014\n                 </span>}\n />;\n};\n","import React from 'react';\nimport {Project} from '../../base/Project';\n\nexport const KayakoProject = () => {\n return <Project name='kayako'\n                 title='Kayako'\n                 content={\n                  <h1>asdsadsd</h1>\n                 }\n                 description={<span>\n                  Skills used: Java, Spring boot, Mysql, Activiti\n                 </span>}\n />;\n};\n","import React from 'react';\nimport {Project} from '../../base/Project';\n\nexport class PaymentGateway extends React.Component<any, any> {\n\n render() {\n  return <Project name='payment-gateway'\n                  title='Payment Gateway'\n                  description={<span>\n                   Electron University - (University Education Management system)\n                   Skills used: Java, Spring, Spring Security, GWT, GXT, EXTJS, IText, phantomjs, postgresql\n                   Period: March 2014 - Dec. 2014\n                  </span>}\n  />;\n }\n\n}\n","import React from 'react';\nimport {Project} from '../../base/Project';\n\nexport const TaxiManagementSystemProject = () => {\n    return <Project name='taxi-management-system'\n                    title='Taxi Management System'\n                    content={\n                        <h1>asdsadsd</h1>\n                    }\n        // link='http://www.accept360.com'\n                    description={<span>\n                        Skills: Java, J2EE, EJB, JMS, Wildfly, Websocket, JAX-RS, Vaadin, Vaadin-Push, Android\n                        Period: Dec 2016 - Feb 2017\n                 </span>}\n    />;\n};\n","import React from 'react';\nimport {Project} from '../../base/Project';\n\nexport const VodafoneIndiaProject = () => {\n    return <Project name='vodafone-india'\n                    title='Vodafone India'\n                    content={\n                        <h1>asdsadsd</h1>\n                    }\n                    // link='http://www.accept360.com'\n                    description={<span>\n                     Skills used: Java, Spring boot, J2EE, Mysql, Angular\n                 </span>}\n    />;\n};\n","import * as projects_ from './projects';\n\nexport const projects = projects_\n","import * as resources from '../resources';\nimport {DynamicComponent} from '../base/dynamic-component';\n\nexport function getResource(name: string) {\n    // @ts-ignore\n    return resources[name];\n}\n\nfunction normalizeResource(item: any) {\n    if (item.prototype) {\n        return new item().render().props;\n    } else {\n        return item().props;\n    }\n}\n\nexport function getResources<T extends DynamicComponent>(items: any): T[] {\n    const keys = Object.getOwnPropertyNames(items).filter(item => !item.startsWith('_'));\n\n    return keys.map(item => items[item]).map(item => normalizeResource(item));\n}\n","import React from 'react';\nimport {ProjectParams} from '../../base/Project';\nimport {Link} from 'react-router-dom';\n\nexport function PortfolioItem(props: ProjectParams) {\n    return <>\n        <div>\n            <h2 id={props.name}>{props.title}</h2>\n            <p>\n                {props.description}\n            </p>\n            <Link to={'/portfolio/' + props.name}>Details</Link>\n        </div>\n    </>;\n}\n","import React from 'react';\n\nimport * as resources from '../../resources';\nimport {getResources} from '../../services/resources-service';\nimport {PortfolioItem} from './PortfolioItem';\nimport {ProjectParams} from '../../base/Project';\n\nconst projects: ProjectParams[] = getResources(resources.projects);\n\n// console.log(resources.projects);\nconsole.log(projects.map(item => item));\n\nexport const Portfolio = () => {\n    return (<>\n        <div className=\"section\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-7\">\n                        <div className=\"content\">\n                            {projects.map(item => <PortfolioItem key={item.name} {...item}/>)}\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    </>);\n};\n","import React from 'react';\nimport {ProjectParams} from '../../base/Project';\nimport {getResources} from '../../services/resources-service';\nimport * as resources from '../../resources';\n\nconst projects: ProjectParams[] = getResources(resources.projects);\n\n\nexport class PortfolioProjectPage extends React.Component<any, any> {\n\n    render() {\n        const projectName = this.props.match.params.name;\n        const project: ProjectParams = projects.filter(item => item.name === projectName)[0];\n\n        return (<>\n            <div className=\"section\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-7\">\n                            <div className=\"content\">\n                                <h1>{project.name}</h1>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        </>);\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {Header} from './components/Header';\nimport {Footer} from './components/Footer';\nimport {AboutPage} from './pages/AboutPage';\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {Portfolio} from './pages/portfolio/Portfolio';\nimport {PortfolioProjectPage} from './pages/portfolio/PortfolioProjectPage';\n\n\ndeclare function mainScript(): void;\n\nclass App extends React.Component<any, any> {\n    render() {\n        return (\n            <>\n                <Router>\n                    <Header/>\n                    <Switch>\n                        <Route path=\"/portfolio/:name\" component={PortfolioProjectPage}>\n                        </Route>\n                        <Route path=\"/portfolio\">\n                            <Portfolio/>\n                        </Route>\n                        <Route path=\"/\">\n                            <AboutPage/>\n                        </Route>\n                    </Switch>\n                </Router>\n                <Footer/>\n            </>\n        );\n    }\n\n    componentDidMount() {\n        mainScript();\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}